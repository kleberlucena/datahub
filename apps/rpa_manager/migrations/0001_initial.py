# Generated by Django 3.2.8 on 2023-10-26 03:32

import apps.rpa_manager.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_minio_backend.models
import stdimage.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('prefix', models.CharField(max_length=20, unique=True)),
                ('model', models.CharField(max_length=20)),
                ('brand', models.CharField(max_length=20)),
                ('in_use', models.BooleanField(blank=True, default=False, null=True)),
                ('aircraft_image', stdimage.models.StdImageField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='imagens', verbose_name='Imagem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('time', models.TimeField(auto_now_add=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('num_propellers', models.IntegerField(default=4)),
                ('num_batteries', models.IntegerField(default=4)),
                ('batteries_loaded', models.BooleanField(default=True)),
                ('control_battery_loaded', models.BooleanField(default=True)),
                ('body', models.BooleanField(default=True)),
                ('engine_rods', models.BooleanField(default=True)),
                ('propellers', models.BooleanField(default=True)),
                ('gimbal', models.BooleanField(default=True)),
                ('spotlight', models.BooleanField(default=True)),
                ('load_speaker', models.BooleanField(default=True)),
                ('stroboscopic_light', models.BooleanField(default=True)),
                ('cables', models.BooleanField(default=True)),
                ('charger', models.BooleanField(default=True)),
                ('smart_controller', models.BooleanField(default=True)),
                ('controller', models.BooleanField(default=True)),
                ('sd_card', models.BooleanField(default=True)),
                ('imu', models.BooleanField(default=True)),
                ('compass', models.BooleanField(default=True)),
                ('signal_transmission', models.BooleanField(default=True)),
                ('system_rtk_ppk', models.BooleanField(default=True)),
                ('video_signal', models.BooleanField(default=True)),
                ('telemetry', models.BooleanField(default=True)),
                ('parachute', models.BooleanField(default=True)),
                ('changes', models.TextField()),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
                ('remote_pilot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CitiesPB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('cities_pb', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('entity', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlightNature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('nature', models.CharField(max_length=300)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Legislation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('date_published', models.DateField(null=True)),
                ('in_effect', models.BooleanField(default=True)),
                ('legislation_file', models.FileField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='legislations')),
            ],
        ),
        migrations.CreateModel(
            name='Probability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.CharField(default='', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Severity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(default='', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfBattery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=45, unique=True)),
                ('recommended_cicles', models.IntegerField(default=45)),
                ('alert_cicles', models.IntegerField(default=35)),
                ('critical_cicles', models.IntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypesOfOperations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('type_operation', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tolerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.probability')),
                ('severity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.severity')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operational_scenario', models.CharField(default='', max_length=300)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('operator', models.CharField(default='POLÍCIA MILITAR DO ESTADO DA PARAÍBA', max_length=100)),
                ('cnpj', models.CharField(default='08.907.776/0001-00', max_length=18)),
                ('apllied_legislation', models.TextField(default='Lei nº 7.565/1986 – CBA; RBAC-E 94; ICA 100-40, MCA 56-5; IS nº E94-003')),
                ('keep_distance_from_3rd', models.BooleanField(default=False)),
                ('pilots_capabilities', models.BooleanField(default=True)),
                ('accident_procedure', models.TextField(default='Corpo de Bombeiros Militar da Paraíba, SAMU, Socorristas, Brigadistas. Deverá ser informado o ocorrido ao CIOP, solicitando o apoio necessário, ou procurar pelo responsável.')),
                ('responsible_sign', stdimage.models.StdImageField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='imagens', verbose_name='Imagem')),
                ('aircrafts', models.ManyToManyField(to='rpa_manager.Aircraft')),
                ('info_responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('title', models.CharField(default='', max_length=250)),
                ('who_authorized', models.CharField(blank=True, max_length=100, null=True)),
                ('who_requested', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField()),
                ('final_date', models.DateField(blank=True, null=True)),
                ('initial_time', models.TimeField()),
                ('final_time', models.TimeField(null=True)),
                ('latitude', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Longitude')),
                ('decea_request_file', models.FileField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='protocolos')),
                ('num_sarpas', models.CharField(blank=True, max_length=20, null=True)),
                ('police_incident_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('operation_report', models.TextField(max_length=500)),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
                ('entity_support', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.entities')),
                ('flight_nature', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.flightnature')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.citiespb')),
                ('observer_pilot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_observer_pilot', to=settings.AUTH_USER_MODEL)),
                ('remote_pilot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_remote_pilot', to=settings.AUTH_USER_MODEL)),
                ('type_of_operation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.typesofoperations')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PoliceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gu_driver', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.citiespb')),
                ('observer_pilot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gu_observer_pilot', to=settings.AUTH_USER_MODEL)),
                ('remote_pilot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gu_remote_pilot', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PointsOfInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('latitude', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Longitude')),
                ('is_temporary', models.BooleanField(default=False)),
                ('initial_date', models.DateTimeField(blank=True, null=True)),
                ('final_date', models.DateTimeField(blank=True, null=True)),
                ('operation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.report')),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('title', models.CharField(max_length=100)),
                ('who_authorized', models.CharField(blank=True, max_length=100, null=True)),
                ('who_requested', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.FloatField(default=0.0, verbose_name='Latitude')),
                ('longitude', models.FloatField(default=0.0, verbose_name='Longitude')),
                ('time', models.TimeField(auto_now_add=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False, null=True)),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.citiespb')),
                ('observer_pilot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_observer_pilot', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Incidents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.TextField()),
                ('reference_point', models.TextField()),
                ('police_incident_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date', models.DateTimeField()),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.citiespb')),
                ('operation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.report')),
                ('remote_pilot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncidentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageIncident', stdimage.models.StdImageField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='imagens', verbose_name='Imagem')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpa_manager.incidents')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageChecklist', stdimage.models.StdImageField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='imagens', verbose_name='Imagem')),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpa_manager.checklist')),
            ],
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado')),
                ('number', models.CharField(max_length=20, unique=True)),
                ('num_cicles', models.IntegerField()),
                ('battery_image', stdimage.models.StdImageField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='imagens', verbose_name='Imagem')),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
                ('maximum_cicles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.typeofbattery')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk', models.CharField(default='', max_length=2)),
                ('hierarchy_authorization', models.CharField(blank=True, max_length=100, null=True)),
                ('tolerability', models.CharField(default='', max_length=100)),
                ('mitigation_measures_risk', models.TextField(default='')),
                ('probability_of_occurrence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.probability')),
                ('risk_assessment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rpa_manager.riskassessment')),
                ('severity_of_occurrence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.severity')),
                ('situation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.situation')),
            ],
        ),
        migrations.AddField(
            model_name='aircraft',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.citiespb'),
        ),
        migrations.CreateModel(
            name='AicraftHistoric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aircraft_title', models.CharField(max_length=45, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(default=apps.rpa_manager.models.generate_hex_code, max_length=25, unique=True)),
                ('num_propellers', models.IntegerField(default=4)),
                ('num_batteries', models.IntegerField(default=4)),
                ('batteries_loaded', models.BooleanField(default=True)),
                ('control_battery_loaded', models.BooleanField(default=True)),
                ('body', models.BooleanField(default=True)),
                ('engine_rods', models.BooleanField(default=True)),
                ('propellers', models.BooleanField(default=True)),
                ('gimbal', models.BooleanField(default=True)),
                ('spotlight', models.BooleanField(default=True)),
                ('load_speaker', models.BooleanField(default=True)),
                ('stroboscopic_light', models.BooleanField(default=True)),
                ('cables', models.BooleanField(default=True)),
                ('carregador', models.BooleanField(default=True)),
                ('charger', models.BooleanField(default=True)),
                ('smart_controller', models.BooleanField(default=True)),
                ('controller', models.BooleanField(default=True)),
                ('sd_card', models.BooleanField(default=True)),
                ('imu', models.BooleanField(default=True)),
                ('compass', models.BooleanField(default=True)),
                ('signal_transmission', models.BooleanField(default=True)),
                ('system_rtk_ppk', models.BooleanField(default=True)),
                ('video_signal', models.BooleanField(default=True)),
                ('telemetry', models.BooleanField(default=True)),
                ('parachute', models.BooleanField(default=True)),
                ('changes', models.TextField()),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpa_manager.aircraft')),
            ],
        ),
    ]
