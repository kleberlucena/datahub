# Generated by Django 3.2.8 on 2023-10-26 11:40

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_minio_backend.models
import stdimage.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0003_address_reference'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('portal', '0018_alter_military_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome da rede')),
                ('details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Informações adicionais')),
            ],
        ),
        migrations.CreateModel(
            name='Qpp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='QPP')),
                ('details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Ponto')),
                ('details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Informações adicionais')),
                ('latitude', models.FloatField(default=0.0, verbose_name='Latitude')),
                ('longitude', models.FloatField(default=0.0, verbose_name='Longitude')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('updated_at', models.DateTimeField(verbose_name='Atualizado')),
                ('update_score', models.IntegerField(blank=True, null=True)),
                ('next_update', models.IntegerField(blank=True, null=True)),
                ('is_temporary', models.BooleanField(blank=True, default=False, null=True)),
                ('date_initial', models.DateTimeField(blank=True, null=True)),
                ('date_final', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Localização')),
                ('is_headquarters', models.BooleanField(default=True)),
                ('cnpj', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_company', models.CharField(blank=True, max_length=20, null=True)),
                ('QPP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.qpp')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tag')),
                ('details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='SpotType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Categoria')),
                ('update_time', models.IntegerField(default=30)),
                ('spot_type_father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spot_type_son', to='protect_network.spottype', verbose_name='Categoria Pai')),
            ],
        ),
        migrations.CreateModel(
            name='SpotAddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressType', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.address')),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.spot')),
            ],
        ),
        migrations.AddField(
            model_name='spot',
            name='addresses',
            field=models.ManyToManyField(through='protect_network.SpotAddresses', to='address.Address'),
        ),
        migrations.AddField(
            model_name='spot',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spots_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='spot',
            name='spot_network',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='protect_network.network'),
        ),
        migrations.AddField(
            model_name='spot',
            name='spot_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.spottype'),
        ),
        migrations.AddField(
            model_name='spot',
            name='tags',
            field=models.ManyToManyField(blank=True, to='protect_network.Tag'),
        ),
        migrations.AddField(
            model_name='spot',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spots_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='spot',
            name='user_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='spots', to='portal.promotion', verbose_name='Militar'),
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opened_mon', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_mon', models.TimeField(blank=True, null=True)),
                ('close_time_mon', models.TimeField(blank=True, null=True)),
                ('opened_tue', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_tue', models.TimeField(blank=True, null=True)),
                ('close_time_tue', models.TimeField(blank=True, null=True)),
                ('opened_wed', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_wed', models.TimeField(blank=True, null=True)),
                ('close_time_wed', models.TimeField(blank=True, null=True)),
                ('opened_thu', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_thu', models.TimeField(blank=True, null=True)),
                ('close_time_thu', models.TimeField(blank=True, null=True)),
                ('opened_fri', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_fri', models.TimeField(blank=True, null=True)),
                ('close_time_fri', models.TimeField(blank=True, null=True)),
                ('opened_sat', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_sat', models.TimeField(blank=True, null=True)),
                ('close_time_sat', models.TimeField(blank=True, null=True)),
                ('opened_sun', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, null=True)),
                ('open_time_sun', models.TimeField(blank=True, null=True)),
                ('close_time_sun', models.TimeField(blank=True, null=True)),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='protect_network.spot')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkResponsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.network')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.promotion')),
            ],
            options={
                'unique_together': {('network', 'responsible')},
            },
        ),
        migrations.AddField(
            model_name='network',
            name='responsibles',
            field=models.ManyToManyField(through='protect_network.NetworkResponsible', to='portal.Promotion'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado')),
                ('imageSpot', stdimage.models.StdImageField(storage=django_minio_backend.models.MinioBackend(bucket_name='bacinf-media'), upload_to='protect_network_img', verbose_name='Imagem')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images_created', to=settings.AUTH_USER_MODEL)),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.spot')),
            ],
            options={
                'verbose_name': 'Imagem',
                'verbose_name_plural': 'Imagens',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Contato')),
                ('phone', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Telefone de contato')),
                ('role', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Título ou função')),
                ('email', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='E-mail')),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protect_network.spot')),
            ],
        ),
    ]
